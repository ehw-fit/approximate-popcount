# 
# This code is a part of TNNApprox library distributed under The MIT License.
# When used, please cite the following article: V. Mrazek, A. Kokkinis, P. Papanikolaou, Z. Vasicek, K. Siozis, G. Tzimpragos, M. Tahoori, G. Zervakis "Evolutionary Approximation of Ternary Neurons \for On-sensor Printed Neural Networks" International Conference on Computer Aided Design (ICCAD), 2024
# 
# MAE=2.5904
# WCE=15.0
# EP=0.880443%
# Printed PDK parameters:
#  Area=0.0
#  Delay=0.0
#  Power=0.0

def popcount25_2mwl(input_a):
  popcount25_2mwl_core_028 = ~(((input_a >> 9) & 0x01) | ((input_a >> 18) & 0x01)) & 0x01
  popcount25_2mwl_core_029_not = ~(((input_a >> 7) & 0x01)) & 0x01
  popcount25_2mwl_core_030 = ~(((input_a >> 20) & 0x01) & ((input_a >> 9) & 0x01)) & 0x01
  popcount25_2mwl_core_031 = ~(((input_a >> 17) & 0x01) & ((input_a >> 14) & 0x01)) & 0x01
  popcount25_2mwl_core_032 = ((input_a >> 3) & 0x01) ^ ((input_a >> 9) & 0x01)
  popcount25_2mwl_core_033 = ((input_a >> 3) & 0x01) ^ ((input_a >> 2) & 0x01)
  popcount25_2mwl_core_034 = ((input_a >> 2) & 0x01) & ((input_a >> 23) & 0x01)
  popcount25_2mwl_core_035 = ~(((input_a >> 4) & 0x01) ^ ((input_a >> 4) & 0x01)) & 0x01
  popcount25_2mwl_core_036 = ~(((input_a >> 0) & 0x01) ^ ((input_a >> 10) & 0x01)) & 0x01
  popcount25_2mwl_core_037 = ~(((input_a >> 24) & 0x01) ^ ((input_a >> 1) & 0x01)) & 0x01
  popcount25_2mwl_core_038 = ~(((input_a >> 17) & 0x01) ^ ((input_a >> 24) & 0x01)) & 0x01
  popcount25_2mwl_core_040 = ~(((input_a >> 22) & 0x01) & ((input_a >> 23) & 0x01)) & 0x01
  popcount25_2mwl_core_041 = ((input_a >> 2) & 0x01) ^ ((input_a >> 7) & 0x01)
  popcount25_2mwl_core_042 = ~(((input_a >> 8) & 0x01) | ((input_a >> 19) & 0x01)) & 0x01
  popcount25_2mwl_core_043 = ((input_a >> 1) & 0x01) | ((input_a >> 22) & 0x01)
  popcount25_2mwl_core_044 = ~(((input_a >> 4) & 0x01)) & 0x01
  popcount25_2mwl_core_045 = ((input_a >> 12) & 0x01) ^ ((input_a >> 11) & 0x01)
  popcount25_2mwl_core_046 = ~(((input_a >> 4) & 0x01)) & 0x01
  popcount25_2mwl_core_047 = ~(((input_a >> 1) & 0x01)) & 0x01
  popcount25_2mwl_core_049 = ~(((input_a >> 23) & 0x01) | ((input_a >> 22) & 0x01)) & 0x01
  popcount25_2mwl_core_052 = ~(((input_a >> 3) & 0x01) ^ ((input_a >> 17) & 0x01)) & 0x01
  popcount25_2mwl_core_057 = ((input_a >> 2) & 0x01) & ((input_a >> 23) & 0x01)
  popcount25_2mwl_core_058 = ((input_a >> 24) & 0x01) ^ ((input_a >> 1) & 0x01)
  popcount25_2mwl_core_059 = ((input_a >> 3) & 0x01) ^ ((input_a >> 17) & 0x01)
  popcount25_2mwl_core_060 = ((input_a >> 3) & 0x01) & ((input_a >> 3) & 0x01)
  popcount25_2mwl_core_061 = ((input_a >> 2) & 0x01) | ((input_a >> 3) & 0x01)
  popcount25_2mwl_core_063 = ~(((input_a >> 14) & 0x01) | ((input_a >> 17) & 0x01)) & 0x01
  popcount25_2mwl_core_067 = ((input_a >> 18) & 0x01) | ((input_a >> 19) & 0x01)
  popcount25_2mwl_core_069 = ~(((input_a >> 3) & 0x01) | ((input_a >> 24) & 0x01)) & 0x01
  popcount25_2mwl_core_071 = ~(((input_a >> 8) & 0x01) & ((input_a >> 14) & 0x01)) & 0x01
  popcount25_2mwl_core_072 = ((input_a >> 13) & 0x01) ^ ((input_a >> 21) & 0x01)
  popcount25_2mwl_core_073 = ~(((input_a >> 15) & 0x01) & ((input_a >> 19) & 0x01)) & 0x01
  popcount25_2mwl_core_076 = ~(((input_a >> 3) & 0x01) & ((input_a >> 18) & 0x01)) & 0x01
  popcount25_2mwl_core_078 = ((input_a >> 8) & 0x01) ^ ((input_a >> 14) & 0x01)
  popcount25_2mwl_core_079_not = ~(((input_a >> 18) & 0x01)) & 0x01
  popcount25_2mwl_core_081 = ~(((input_a >> 6) & 0x01)) & 0x01
  popcount25_2mwl_core_082 = ~(((input_a >> 3) & 0x01)) & 0x01
  popcount25_2mwl_core_083 = ~(((input_a >> 10) & 0x01) ^ ((input_a >> 9) & 0x01)) & 0x01
  popcount25_2mwl_core_085 = ~(((input_a >> 22) & 0x01) ^ ((input_a >> 6) & 0x01)) & 0x01
  popcount25_2mwl_core_090 = ~(((input_a >> 8) & 0x01) & ((input_a >> 1) & 0x01)) & 0x01
  popcount25_2mwl_core_091 = ~(((input_a >> 16) & 0x01) & ((input_a >> 17) & 0x01)) & 0x01
  popcount25_2mwl_core_096_not = ~(((input_a >> 11) & 0x01)) & 0x01
  popcount25_2mwl_core_097 = ((input_a >> 18) & 0x01) | ((input_a >> 12) & 0x01)
  popcount25_2mwl_core_098 = ~(((input_a >> 24) & 0x01) & ((input_a >> 11) & 0x01)) & 0x01
  popcount25_2mwl_core_099 = ~(((input_a >> 0) & 0x01) ^ ((input_a >> 18) & 0x01)) & 0x01
  popcount25_2mwl_core_100 = ~(((input_a >> 15) & 0x01) ^ ((input_a >> 17) & 0x01)) & 0x01
  popcount25_2mwl_core_101 = ~(((input_a >> 1) & 0x01) ^ ((input_a >> 15) & 0x01)) & 0x01
  popcount25_2mwl_core_102 = ~(((input_a >> 3) & 0x01) & ((input_a >> 7) & 0x01)) & 0x01
  popcount25_2mwl_core_103 = ((input_a >> 16) & 0x01) & ((input_a >> 3) & 0x01)
  popcount25_2mwl_core_104 = ~(((input_a >> 4) & 0x01) & ((input_a >> 7) & 0x01)) & 0x01
  popcount25_2mwl_core_105_not = ~(((input_a >> 4) & 0x01)) & 0x01
  popcount25_2mwl_core_106 = ((input_a >> 5) & 0x01) | ((input_a >> 18) & 0x01)
  popcount25_2mwl_core_107 = ~(((input_a >> 23) & 0x01) ^ ((input_a >> 7) & 0x01)) & 0x01
  popcount25_2mwl_core_110 = ~(((input_a >> 19) & 0x01) & ((input_a >> 7) & 0x01)) & 0x01
  popcount25_2mwl_core_111 = ((input_a >> 4) & 0x01) ^ ((input_a >> 10) & 0x01)
  popcount25_2mwl_core_112 = ~(((input_a >> 3) & 0x01) | ((input_a >> 12) & 0x01)) & 0x01
  popcount25_2mwl_core_113 = ~(((input_a >> 4) & 0x01) | ((input_a >> 6) & 0x01)) & 0x01
  popcount25_2mwl_core_114 = ~(((input_a >> 1) & 0x01)) & 0x01
  popcount25_2mwl_core_115 = ((input_a >> 20) & 0x01) | ((input_a >> 22) & 0x01)
  popcount25_2mwl_core_118 = ~(((input_a >> 21) & 0x01) | ((input_a >> 5) & 0x01)) & 0x01
  popcount25_2mwl_core_119 = ((input_a >> 0) & 0x01) & ((input_a >> 16) & 0x01)
  popcount25_2mwl_core_121 = ~(((input_a >> 5) & 0x01) & ((input_a >> 15) & 0x01)) & 0x01
  popcount25_2mwl_core_124 = ((input_a >> 24) & 0x01) ^ ((input_a >> 11) & 0x01)
  popcount25_2mwl_core_129 = ~(((input_a >> 18) & 0x01) ^ ((input_a >> 22) & 0x01)) & 0x01
  popcount25_2mwl_core_131 = ~(((input_a >> 9) & 0x01) | ((input_a >> 21) & 0x01)) & 0x01
  popcount25_2mwl_core_132 = ((input_a >> 5) & 0x01) & ((input_a >> 22) & 0x01)
  popcount25_2mwl_core_133 = ~(((input_a >> 12) & 0x01)) & 0x01
  popcount25_2mwl_core_134 = ((input_a >> 21) & 0x01) ^ ((input_a >> 14) & 0x01)
  popcount25_2mwl_core_135 = ((input_a >> 13) & 0x01) | ((input_a >> 4) & 0x01)
  popcount25_2mwl_core_136 = ~(((input_a >> 8) & 0x01) ^ ((input_a >> 12) & 0x01)) & 0x01
  popcount25_2mwl_core_139 = ((input_a >> 4) & 0x01) & ((input_a >> 16) & 0x01)
  popcount25_2mwl_core_143 = ((input_a >> 15) & 0x01) | ((input_a >> 5) & 0x01)
  popcount25_2mwl_core_146 = ~(((input_a >> 22) & 0x01) | ((input_a >> 12) & 0x01)) & 0x01
  popcount25_2mwl_core_155 = ~(((input_a >> 18) & 0x01) ^ ((input_a >> 9) & 0x01)) & 0x01
  popcount25_2mwl_core_156 = ~(((input_a >> 10) & 0x01) ^ ((input_a >> 18) & 0x01)) & 0x01
  popcount25_2mwl_core_159 = ~(((input_a >> 18) & 0x01) | ((input_a >> 20) & 0x01)) & 0x01
  popcount25_2mwl_core_160 = ~(((input_a >> 15) & 0x01) & ((input_a >> 19) & 0x01)) & 0x01
  popcount25_2mwl_core_161 = ~(((input_a >> 1) & 0x01) ^ ((input_a >> 24) & 0x01)) & 0x01
  popcount25_2mwl_core_162 = ~(((input_a >> 21) & 0x01) ^ ((input_a >> 18) & 0x01)) & 0x01
  popcount25_2mwl_core_164 = ~(((input_a >> 8) & 0x01) & ((input_a >> 9) & 0x01)) & 0x01
  popcount25_2mwl_core_167 = ((input_a >> 20) & 0x01) | ((input_a >> 13) & 0x01)
  popcount25_2mwl_core_169 = ~(((input_a >> 21) & 0x01) ^ ((input_a >> 23) & 0x01)) & 0x01
  popcount25_2mwl_core_171 = ((input_a >> 17) & 0x01) | ((input_a >> 6) & 0x01)
  popcount25_2mwl_core_172 = ((input_a >> 5) & 0x01) & ((input_a >> 10) & 0x01)
  popcount25_2mwl_core_173 = ~(((input_a >> 24) & 0x01) ^ ((input_a >> 11) & 0x01)) & 0x01
  popcount25_2mwl_core_174_not = ~(((input_a >> 9) & 0x01)) & 0x01
  popcount25_2mwl_core_175 = ((input_a >> 14) & 0x01) ^ ((input_a >> 4) & 0x01)
  popcount25_2mwl_core_177 = ((input_a >> 22) & 0x01) | ((input_a >> 13) & 0x01)
  popcount25_2mwl_core_178 = ~(((input_a >> 16) & 0x01) & ((input_a >> 5) & 0x01)) & 0x01
  popcount25_2mwl_core_179 = ((input_a >> 24) & 0x01) ^ ((input_a >> 14) & 0x01)
  popcount25_2mwl_core_181 = ~(((input_a >> 18) & 0x01) ^ ((input_a >> 7) & 0x01)) & 0x01
  popcount25_2mwl_core_183 = ~(((input_a >> 4) & 0x01) | ((input_a >> 24) & 0x01)) & 0x01

  popcount25_2mwl_out = 0
  popcount25_2mwl_out = (popcount25_2mwl_out) | ((0x00) << 0)
  popcount25_2mwl_out = (popcount25_2mwl_out) | (((input_a >> 23) & 0x01) << 1)
  popcount25_2mwl_out = (popcount25_2mwl_out) | (((input_a >> 24) & 0x01) << 2)
  popcount25_2mwl_out = (popcount25_2mwl_out) | ((0x01) << 3)
  popcount25_2mwl_out = (popcount25_2mwl_out) | ((0x00) << 4)
  return popcount25_2mwl_out
